1 - Abra o Packege Manager Console, Troque o Default project para Discount.API, e vamos instalar o postgre Sql dentro da aplicação.

	* Install-Package Npgsql

	* Install-Package Dapper 
	
	* Update-Package -ProjectName Discount.API


2- Dentro de Discount.API crie a pasta Repositories e dentro dela as classes e Interfaces de contrato

	* public interface IDiscountRepository

Task<Coupon> GetDiscount(string productName);

Task<bool> CreateDiscount(Coupon coupon);

Task<bool> UpdateDiscount(Coupon coupon);

ask<bool> DeleteDiscount(string productName);


2.1 - Crie a classe DiscountRepository e faça a implementação dos contratos descritos po la Interface acima

	* DiscountRepository : IDiscountRepository

  private readonly IConfiguration _configuration;

        public DiscountRepository(IConfiguration configuration)
        {
            _configuration = configuration ?? throw new ArgumentNullException(nameof(configuration));
        }

        public async Task<Coupon> GetDiscount(string productName)
        {
            using var connection = new NpgsqlConnection
                (_configuration.GetValue<string>("DatabaseSettings:ConnectionString"));

            var coupon = await connection.QueryFirstOrDefaultAsync<Coupon>
                ("SELECT * FROM Coupon WHERE ProductName = @ProductName", new { ProductName = productName });

            if (coupon == null)
                return new Coupon 
                { ProductName = "No Discount", Amount = 0, Description = "No Discount Desc" };

            return coupon;
        }




 public async Task<bool> CreateDiscount(Coupon coupon)
        {
            using var connection = new NpgsqlConnection
                (_configuration.GetValue<string>("DatabaseSettings:ConnectionString"));

            var affected =
                await connection.ExecuteAsync
                    ("INSERT INTO Coupon (ProductName, Description, Amount) VALUES (@ProductName, @Description, @Amount)",
                            new { ProductName = coupon.ProductName, Description = coupon.Description, Amount = coupon.Amount });

            if (affected == 0)
                return false;

            return true;
        }
 


  public async Task<bool> UpdateDiscount(Coupon coupon)
        {
            using var connection = new NpgsqlConnection(_configuration.GetValue<string>("DatabaseSettings:ConnectionString"));

            var affected = await connection.ExecuteAsync
                    ("UPDATE Coupon SET ProductName=@ProductName, Description = @Description, Amount = @Amount WHERE Id = @Id",
                            new { ProductName = coupon.ProductName, Description = coupon.Description, Amount = coupon.Amount, Id = coupon.Id });

            if (affected == 0)
                return false;

            return true;
        }



   public async Task<bool> DeleteDiscount(string productName)
        {
            using var connection = new NpgsqlConnection(_configuration.GetValue<string>("DatabaseSettings:ConnectionString"));

            var affected = await connection.ExecuteAsync("DELETE FROM Coupon WHERE ProductName = @ProductName",
                new { ProductName = productName });

            if (affected == 0)
                return false;

            return true;
        }






3 - Abra o appsettings.json e faça a connectionString do novo banco instalado, a cima da existente.

"DatabaseSeettings": {
    "ConnectionString": "Server=localhost;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
  },